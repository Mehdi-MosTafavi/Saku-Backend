name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    services:
#      postgres:
#        image: postgres:12
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: github_actions
#        ports:
#          - 5432:5432
#        # needed because the postgres container does not provide a healthcheck
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: ['3.8', '3.9', '3.10']
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
#
#    - name: build docker
#      run: |
#        docker build . -t ghcr.io/mehdi-mostafavi/saku:${{ matrix.python-version }}_${{ github.sha }}
#
#    - name: push
#      run: |
#        docker login --username=${{ secrets.REGISTRY_USERNAME }} --password=${{ secrets.PAT }} ghcr.io
#        docker push ghcr.io/mehdi-mostafavi/saku:${{ matrix.python-version }}_${{ github.sha }}
#
#
#  test:
#    runs-on: ubuntu-latest
#    needs: build
#
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: ['3.8', '3.9', '3.10']
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Run Tests
#      run: |
#        docker login --username=${{ secrets.REGISTRY_USERNAME }} --password=${{ secrets.PAT }} ghcr.io
#        export TAG=${{ matrix.python-version }}_${{ github.sha }}
#        docker pull ghcr.io/mehdi-mostafavi/saku:$TAG
#        docker-compose -f docker-compose.test.yml run web

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SSH }}

      - name: Deploy
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@188.121.110.151 "cd Saku-Backend && git pull && ls && docker-compose up"
